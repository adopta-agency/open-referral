{
  "swagger": "2.0",
  "info": {
    "title": "Open Referral API",
    "description": "This is a specification describing the Open Referral API, using the Human Services Specification. This has been extracted from the Ohana API deployment, but will be standardized to refer to the universal standard that will apply to any Open Referral compliant API.",
    "termsOfService": "https://openreferral.org/documentation/",
    "contact": {
      "name": "Open Referral",
      "url": "https://openreferral.org/",
      "email": null
    },
    "license": {
      "name": null,
      "url": null
    },
    "version": "v1"
  },
  "host": "api.example.com",
  "basePath": "/api/",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "description": "Get all categories",
        "operationId": "get-all-categories",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/contacts": {
      "get": {
        "summary": "Get Contacts",
        "description": "Get Contacts",
        "operationId": "get-contacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Contact Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contacts"
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "summary": "Create New Contact",
        "description": "Create New Contact",
        "operationId": "Create New Contact",
        "parameters": [
          {
            "in": "query",
            "name": "organization_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "service_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "name",
            "description": ""
          },
          {
            "in": "query",
            "name": "title",
            "description": ""
          },
          {
            "in": "query",
            "name": "department",
            "description": ""
          },
          {
            "in": "query",
            "name": "email",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Contact Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contacts"
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/:contact_id": {
      "get": {
        "summary": "Get Contact",
        "description": "Get Contact",
        "operationId": "get-contact",
        "parameters": [
          {
            "in": "path",
            "name": "contact_id",
            "description": "The contact id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contacts"
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "put": {
        "summary": "Update Contact",
        "description": "Update Contact",
        "operationId": "update-contact",
        "parameters": [
          {
            "in": "query",
            "name": "organization_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "service_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "name",
            "description": ""
          },
          {
            "in": "query",
            "name": "title",
            "description": ""
          },
          {
            "in": "query",
            "name": "department",
            "description": ""
          },
          {
            "in": "query",
            "name": "email",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Contact Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contacts"
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "delete": {
        "summary": "Delete Contact",
        "description": "Delete Contact",
        "operationId": "delete-contact",
        "parameters": [
          {
            "in": "path",
            "name": "contact_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contacts"
              }
            }
          }
        }
      }
    },
    "/contacts/:contact_id/phones": {
      "get": {
        "summary": "Get Phones",
        "description": "Get Phones",
        "operationId": "get-phones",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Phone",
        "description": "Add Phone",
        "operationId": "add-phone",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/contacts/: contact_id/phones/:phone_id": {
      "get": {
        "summary": "Get Phone",
        "description": "get Phone",
        "operationId": "get-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Phone",
        "description": "Update Phone",
        "operationId": "update-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Phone",
        "description": "Delete Phone",
        "operationId": "delete-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations": {
      "get": {
        "summary": "Get all locations",
        "description": "Get all locations",
        "operationId": "get-all-locations",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The particular page of results."
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Amount of locations to return per page, up to 100."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/:location_id": {
      "delete": {
        "summary": "Delete an existing location",
        "description": "Delete an existing location",
        "operationId": "delete-an-existing-location",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/:location_id/holiday_schedule/": {
      "get": {
        "summary": "Get Holiday Schedule",
        "description": "Get Holiday Schedule",
        "operationId": "get-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Holiday Schedule",
        "description": "Add Holiday Schedule",
        "operationId": "add-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/locations/:location_id/holiday_schedule/:holiday_schedule_id/": {
      "get": {
        "summary": "Get Holiday Schedule",
        "description": "Get Holiday Schedule",
        "operationId": "get-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Holiday Schedule",
        "description": "Update Holiday Schedule",
        "operationId": "update-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Holiday Schedule",
        "description": "Delete Holiday Schedule",
        "operationId": "delete-holiday-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/locations/:location_id/languages/": {
      "get": {
        "summary": "Get Languages",
        "description": "Get Languages",
        "operationId": "get-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Languages",
        "description": "Add Languages",
        "operationId": "add-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/locations/:location_id/languages/:language_id/": {
      "get": {
        "summary": "Get Languages",
        "description": "Get Languages",
        "operationId": "get-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Languages",
        "description": "Update Languages",
        "operationId": "update-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Languages",
        "description": "Delete Languages",
        "operationId": "delete-languages",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/locations/:location_id/postal_address": {
      "get": {
        "summary": "Get Postal Address",
        "description": "Get Postal Address",
        "operationId": "get-postal-address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          },
          {
            "in": "query",
            "name": "address_2",
            "description": "The secondary part of the Street Address, such as the Suite, Room, or Floor number"
          },
          {
            "in": "query",
            "name": "attention",
            "description": "Any person the letter might be addressed to."
          },
          {
            "in": "query",
            "name": "city",
            "description": "The City name"
          },
          {
            "in": "query",
            "name": "country",
            "description": "2-letter ISO 3361-1 country code"
          },
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "postal_code",
            "description": "A valid postal code. Note that the API currently assumes this will be a US 5 or 9-digit ZIP code. 9-digit ZIP codes are separated with a dash, like this: 94025-9881. If you are using non-US data, you will need to replace the postal code validation with your own."
          },
          {
            "in": "query",
            "name": "state_province",
            "description": "2-letter US state_province abbreviation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Add New Postal Adress",
        "description": "Add New Postal Adress",
        "operationId": "add-new-postal-address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          },
          {
            "in": "query",
            "name": "address_2",
            "description": "The secondary part of the Street Address, such as the Suite, Room, or Floor number"
          },
          {
            "in": "query",
            "name": "attention",
            "description": "Any person the letter might be addressed to."
          },
          {
            "in": "query",
            "name": "city",
            "description": "The City name"
          },
          {
            "in": "query",
            "name": "country",
            "description": "2-letter ISO 3361-1 country code"
          },
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "postal_code",
            "description": "A valid postal code. Note that the API currently assumes this will be a US 5 or 9-digit ZIP code. 9-digit ZIP codes are separated with a dash, like this: 94025-9881. If you are using non-US data, you will need to replace the postal code validation with your own."
          },
          {
            "in": "query",
            "name": "state_province",
            "description": "2-letter US state_province abbreviation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete Postal Address",
        "description": "Delete Postal Address",
        "operationId": "Delete Postal Address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/:location_id/postal_address/:postal_address_id": {
      "put": {
        "summary": "Update Postal Address",
        "description": "Postal Mailing Address",
        "operationId": "update-postal-address",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "path",
            "name": "mail_address_id",
            "description": "The mail address id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Postal Address",
        "description": "Delete Postal Address",
        "operationId": "delete-postal-address",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "path",
            "name": "mail_address_id",
            "description": "The mail address id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/physical_address": {
      "get": {
        "summary": "Get Physical Address",
        "description": "Get Physical Address",
        "operationId": "get-physical-address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          },
          {
            "in": "query",
            "name": "address_2",
            "description": "The secondary part of the Street Address, such as the Suite, Room, or Floor number"
          },
          {
            "in": "query",
            "name": "attention",
            "description": "Any person the letter might be addressed to."
          },
          {
            "in": "query",
            "name": "city",
            "description": "The City name"
          },
          {
            "in": "query",
            "name": "country",
            "description": "2-letter ISO 3361-1 country code"
          },
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "postal_code",
            "description": "A valid postal code. Note that the API currently assumes this will be a US 5 or 9-digit ZIP code. 9-digit ZIP codes are separated with a dash, like this: 94025-9881. If you are using non-US data, you will need to replace the postal code validation with your own."
          },
          {
            "in": "query",
            "name": "state_province",
            "description": "2-letter US state_province abbreviation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Add New Physical Adress",
        "description": "Add New Physical Adress",
        "operationId": "add-new-physical-address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          },
          {
            "in": "query",
            "name": "address_2",
            "description": "The secondary part of the Street Address, such as the Suite, Room, or Floor number"
          },
          {
            "in": "query",
            "name": "attention",
            "description": "Any person the letter might be addressed to."
          },
          {
            "in": "query",
            "name": "city",
            "description": "The City name"
          },
          {
            "in": "query",
            "name": "country",
            "description": "2-letter ISO 3361-1 country code"
          },
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "postal_code",
            "description": "A valid postal code. Note that the API currently assumes this will be a US 5 or 9-digit ZIP code. 9-digit ZIP codes are separated with a dash, like this: 94025-9881. If you are using non-US data, you will need to replace the postal code validation with your own."
          },
          {
            "in": "query",
            "name": "state_province",
            "description": "2-letter US state_province abbreviation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete Physical Address",
        "description": "Delete Physical Address",
        "operationId": "Delete Physical Address",
        "parameters": [
          {
            "in": "query",
            "name": "address_1",
            "description": "The primary part of the Street Address or P.O. Box number."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/:location_id/physical_address/:postal_address_id": {
      "put": {
        "summary": "Update Physical Address",
        "description": "Postal Physical Address",
        "operationId": "update-physical-address",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "path",
            "name": "mail_address_id",
            "description": "The mail address id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Physical Address",
        "description": "Delete Physical Address",
        "operationId": "delete-physical-address",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "path",
            "name": "mail_address_id",
            "description": "The mail address id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/phones": {
      "get": {
        "summary": "Get Phones",
        "description": "Get Phones",
        "operationId": "get-phones",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Phone",
        "description": "Add Phone",
        "operationId": "add-phone",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/phones/:phone_id": {
      "get": {
        "summary": "Get Phone",
        "description": "get Phone",
        "operationId": "get-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Phone",
        "description": "Update Phone",
        "operationId": "update-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Phone",
        "description": "Delete Phone",
        "operationId": "delete-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:locati_onid/regular_schedule": {
      "get": {
        "summary": "Get Regular Schedule",
        "description": "Get Regular Schedule",
        "operationId": "get-regular-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Regular Schedule",
        "description": "Add Regular Schedule",
        "operationId": "add-regular-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/regular_schedule/:regular_schedule_id/": {
      "get": {
        "summary": "Get Regular Schedule",
        "description": "Get Regular Schedule",
        "operationId": "get-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Regular Schedule",
        "description": "Update Regular Schedule",
        "operationId": "update-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Regular Schedule",
        "description": "Delete Regular Schedule",
        "operationId": "delete-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/service_at_location/": {
      "get": {
        "summary": "Get Service At Location",
        "description": "Get Service At Location",
        "operationId": "get-service-location",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Service At Location",
        "description": "Add Service At Location",
        "operationId": "add-service-location",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/service_at_location/:service_at_location_id/": {
      "get": {
        "summary": "Get Service At Location",
        "description": "Get Service At Location",
        "operationId": "get-service-location",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Service At Location",
        "description": "Update Service At Location",
        "operationId": "update-service-location",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Service At Location",
        "description": "Delete Service At Location",
        "operationId": "delete-service-location",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/locations/:location_id/accessibility_for_disabilities/": {
      "get": {
        "summary": "Get Accessibility For Disabilities",
        "description": "Get Accessibility For Disabilities",
        "operationId": "get-accessibility-for-disabilities",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Add Accessibility For Disabilities",
        "description": "Add Accessibility For Disabilities",
        "operationId": "add-accessibility-for-disabilities",
        "parameters": [
          {
            "in": "query",
            "name": "location_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "accessibility",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/:location_id/accessibility_for_disabilities/:accessibility_for_disabilities_id/": {
      "get": {
        "summary": "Get Accessibility For Disabilities",
        "description": "Get Accessibility For Disabilities",
        "operationId": "get-service-location",
        "parameters": [
          {
            "in": "query",
            "name": "location_id",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "put": {
        "summary": "Update Accessibility For Disabilities",
        "description": "Update Accessibility For Disabilities",
        "operationId": "update-accessibility-for-disabilities",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility_for_disabilities_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "location_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "accessibility",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete Accessibility For Disabilities",
        "description": "Delete Accessibility For Disabilities",
        "operationId": "delete-accessibility-for-disabilities",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility_for_disabilities_id",
            "description": ""
          },
          {
            "in": "query",
            "name": "location_id",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Locations"
        ]
      }
    },
    "/organizations": {
      "get": {
        "summary": "Get Locations",
        "description": "Get Locations",
        "operationId": "get-locations",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Create a new organization",
        "description": "Create a new organization",
        "operationId": "create-a-new-organization",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id": {
      "get": {
        "summary": "Get Organization",
        "description": "Get Organization",
        "operationId": "get-organization",
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Update Existing Organization",
        "description": "Update Existing Organization",
        "operationId": "update-existing-organization",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Organization",
        "description": "Delete Organization",
        "operationId": "delete-organization",
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        }
      }
    },
    "/organizations/:organization_id/contacts": {
      "get": {
        "summary": "Get Contacts",
        "description": "Get Contacts",
        "operationId": "get-contacts",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Contact",
        "description": "Add Contact",
        "operationId": "add-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/contacts/: contact_id/": {
      "get": {
        "summary": "Get Contact",
        "description": "Get Contact",
        "operationId": "get-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Contact",
        "description": "Update Contact",
        "operationId": "update-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Contact",
        "description": "Delete Contact",
        "operationId": "delete-contact",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/funding/": {
      "get": {
        "summary": "Get Funding",
        "description": "Get Funding",
        "operationId": "get-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Funding",
        "description": "Add Funding",
        "operationId": "add-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/funding/:funding_id/": {
      "get": {
        "summary": "Get Funding",
        "description": "Get Funding",
        "operationId": "get-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Funding",
        "description": "Update Funding",
        "operationId": "update-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Funding",
        "description": "Delete Funding",
        "operationId": "delete-funding",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/locations": {
      "get": {
        "summary": "Get Location",
        "description": "Get Location",
        "operationId": "get-location",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Create a new location",
        "description": "Create a new location",
        "operationId": "create-a-new-location",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/locations/:location_id/": {
      "get": {
        "summary": "Update Existing Location",
        "description": "Update Existing Location",
        "operationId": "update-existing-location",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Create a new location",
        "description": "Create a new location",
        "operationId": "create-a-new-location",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Location",
        "description": "Delete Location",
        "operationId": "delete-location",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/phones": {
      "get": {
        "summary": "Get Phones",
        "description": "Get Phones",
        "operationId": "get-phones",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Phone",
        "description": "Add Phone",
        "operationId": "add-phone",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/organizations/:organization_id/phones/:phone_id": {
      "get": {
        "summary": "Get Phone",
        "description": "get Phone",
        "operationId": "get-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Phone",
        "description": "Update Phone",
        "operationId": "update-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Phone",
        "description": "Delete Phone",
        "operationId": "delete-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/organizations/:organization_id/programs": {
      "get": {
        "summary": "Get Programs",
        "description": "Get Programs",
        "operationId": "get-programs",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Program",
        "description": "Add Program",
        "operationId": "add-program",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/:organization_id/programs/:program_id/": {
      "get": {
        "summary": "Get Program",
        "description": "Get Program",
        "operationId": "get-program",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Program",
        "description": "Update Program",
        "operationId": "update-program",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Program",
        "description": "Delete Program",
        "operationId": "delete-program",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/search": {
      "get": {
        "summary": "Get locations that match certain criteria.",
        "description": "Get locations that match certain criteria.",
        "operationId": "get-locations-that-match-certain-criteria",
        "parameters": [
          {
            "in": "query",
            "name": "category"
          },
          {
            "in": "query",
            "name": "email"
          },
          {
            "in": "query",
            "name": "keyword"
          },
          {
            "in": "query",
            "name": "language"
          },
          {
            "in": "query",
            "name": "lat_lng"
          },
          {
            "in": "query",
            "name": "location"
          },
          {
            "in": "query",
            "name": "org_name"
          },
          {
            "in": "query",
            "name": "page"
          },
          {
            "in": "query",
            "name": "per_page"
          },
          {
            "in": "query",
            "name": "radius"
          },
          {
            "in": "query",
            "name": "service_area"
          },
          {
            "in": "query",
            "name": "status"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Search"
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "Get Services",
        "description": "Get Services",
        "operationId": "get-services",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Create New Service",
        "description": "Create New Service",
        "operationId": "create-new-service",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id": {
      "get": {
        "summary": "Get Service",
        "description": "Get Service",
        "operationId": "get-service",
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Update Service",
        "description": "Update Service",
        "operationId": "update-service",
        "parameters": [
          {
            "in": "query",
            "name": "accreditations",
            "description": "A list of accreditations an organization has received."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this organization might be known by."
          },
          {
            "in": "query",
            "name": "date_incorporated",
            "description": "The date this organization was incorporated."
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of what the organization does."
          },
          {
            "in": "query",
            "name": "email",
            "description": "The organization’s primary email."
          },
          {
            "in": "query",
            "name": "funding_sources",
            "description": "A list of sources of funds for an organization."
          },
          {
            "in": "query",
            "name": "legal_status",
            "description": "The conditions an organization is operating under; e.g. non-profit, private corporation or a government organization."
          },
          {
            "in": "query",
            "name": "licenses",
            "description": "A list of licenses an organization has obtained to operate legally."
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the organization"
          },
          {
            "in": "query",
            "name": "tax_id",
            "description": "Tax identifier, such as Federal Employer Identification Number."
          },
          {
            "in": "query",
            "name": "tax_status",
            "description": "Internal Revenue Service tax designation, such as 501(c)(3) for tax-exempt organizations."
          },
          {
            "in": "query",
            "name": "website",
            "description": "The organization’s website"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Service",
        "description": "Delete Service",
        "operationId": "delete-service",
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Organization Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        }
      }
    },
    "/services/:service_id/categories": {
      "put": {
        "summary": "Update a service’s categories",
        "description": "Update a service’s categories",
        "operationId": "update-a-servicersquos-categories",
        "parameters": [
          {
            "in": "path",
            "name": "service_id",
            "description": "The service id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "taxonomy_ids",
            "description": "An array of valid taxonomy_ids."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Services"
        ]
      }
    },
    "/services/:service_id/contacts": {
      "get": {
        "summary": "Get Contacts",
        "description": "Get Contacts",
        "operationId": "get-contacts",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Contact",
        "description": "Add Contact",
        "operationId": "add-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/contacts/:contact_id/": {
      "get": {
        "summary": "Get Contact",
        "description": "Get Contact",
        "operationId": "get-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Contact",
        "description": "Update Contact",
        "operationId": "update-contact",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Contact",
        "description": "Delete Contact",
        "operationId": "delete-contact",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/eligibility/": {
      "get": {
        "summary": "Get Eligibility",
        "description": "Get Eligibility",
        "operationId": "get-eligibility",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Eligibility",
        "description": "Add Eligibility",
        "operationId": "add-eligibility",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/eligibility/:eligibility_id/": {
      "get": {
        "summary": "Get Eligibility",
        "description": "Get Eligibility",
        "operationId": "get-eligibility",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Eligibility",
        "description": "Update Eligibility",
        "operationId": "update-eligibility",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Eligibility Contact",
        "description": "Delete Eligibility",
        "operationId": "delete-eligibility",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/fees/": {
      "get": {
        "summary": "Get Fees",
        "description": "Get Fees",
        "operationId": "get-fees",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Fees",
        "description": "Add Fees",
        "operationId": "add-fees",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/fees/:feed_id/": {
      "get": {
        "summary": "Get Fees",
        "description": "Get Fees",
        "operationId": "get-fees",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Fees",
        "description": "Update Fees",
        "operationId": "update-fees",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Eligibility Fees",
        "description": "Delete Fees",
        "operationId": "delete-fees",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/funding/": {
      "get": {
        "summary": "Get Funding",
        "description": "Get Funding",
        "operationId": "get-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Funding",
        "description": "Add Funding",
        "operationId": "add-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/funding/:funding_id/": {
      "get": {
        "summary": "Get Funding",
        "description": "Get Funding",
        "operationId": "get-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Funding",
        "description": "Update Funding",
        "operationId": "update-funding",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Funding",
        "description": "Delete Funding",
        "operationId": "delete-funding",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/holiday_schedule/": {
      "get": {
        "summary": "Get Holiday Schedule",
        "description": "Get Holiday Schedule",
        "operationId": "get-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Holiday Schedule",
        "description": "Add Holiday Schedule",
        "operationId": "add-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/holiday_schedule/:holiday_schedule_id/": {
      "get": {
        "summary": "Get Holiday Schedule",
        "description": "Get Holiday Schedule",
        "operationId": "get-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Holiday Schedule",
        "description": "Update Holiday Schedule",
        "operationId": "update-holiday-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Holiday Schedule",
        "description": "Delete Holiday Schedule",
        "operationId": "delete-holiday-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/intepretation_services/": {
      "get": {
        "summary": "Get Interpretation Services",
        "description": "Get Interpretation Services",
        "operationId": "get-interpretation-services",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Interpretation Services",
        "description": "Add Interpretation Services",
        "operationId": "add-interpretation-services",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/intepretation_services/:intepretation_services_id/": {
      "get": {
        "summary": "Get Interpretation Services",
        "description": "Get Interpretation Services",
        "operationId": "get-interpretation-services",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Interpretation Services",
        "description": "Update Interpretation Services",
        "operationId": "update-interpretation-services",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Interpretation Services",
        "description": "Delete Interpretation Services",
        "operationId": "delete-interpretation-services",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/languages/": {
      "get": {
        "summary": "Get Languages",
        "description": "Get Languages",
        "operationId": "get-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Languages",
        "description": "Add Languages",
        "operationId": "add-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/languages/:language_id/": {
      "get": {
        "summary": "Get Languages",
        "description": "Get Languages",
        "operationId": "get-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Languages",
        "description": "Update Languages",
        "operationId": "update-languages",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Languages",
        "description": "Delete Languages",
        "operationId": "delete-languages",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/payment_accepted/": {
      "get": {
        "summary": "Get Payment Accepted",
        "description": "Get Payment Accepted",
        "operationId": "get-payment-accepted",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Add Payment Accepted",
        "description": "Add Payment Accepted",
        "operationId": "add-payment-accepted",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/payment_accepted/:payment_accepted_id/": {
      "get": {
        "summary": "Get Payment Accepted",
        "description": "Get Payment Accepted",
        "operationId": "get-payment-accepted",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update Payment Accepted",
        "description": "Update Payment Accepted",
        "operationId": "update-payment-accepted",
        "parameters": [
          {
            "in": "query",
            "name": "accessibility",
            "description": "Accessibility options available at the location. Accepted values are cd, deaf_interpreter, disabled_parking, elevator, ramp, restroom, tape_braille, tty, wheelchair, and wheelchair_van."
          },
          {
            "in": "query",
            "name": "address_attributes",
            "description": "required unless the location is marked as virtual"
          },
          {
            "in": "query",
            "name": "admin_emails",
            "description": "Email address for a person allowed to administer the location (via the Ohana API Admin interface for example)."
          },
          {
            "in": "query",
            "name": "alternate_name",
            "description": "Another name this location might be known by."
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of services provided at the location"
          },
          {
            "in": "query",
            "name": "email",
            "description": "General Email address for location. Emails that belong to contacts should go in the Contact object."
          },
          {
            "in": "query",
            "name": "languages",
            "description": "Languages spoken at the location"
          },
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude portion of the location’s coordinates. Note that the app automatically geocodes addresses if the data doesn’t include coordinates"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the location"
          },
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "short_desc",
            "description": "Succinct description of services provided at the location."
          },
          {
            "in": "query",
            "name": "transportation",
            "description": "Public transportation options near the location"
          },
          {
            "in": "query",
            "name": "virtual",
            "description": "required if the location does not have a physical address"
          },
          {
            "in": "query",
            "name": "website",
            "description": "The location’s website. Must include “http://” or “https://”"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "summary": "Delete Payment Accepted",
        "description": "Delete Payment Accepted",
        "operationId": "delete-payment-accepted",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The id of the location to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/services/:service_id/phones": {
      "get": {
        "summary": "Get Phones",
        "description": "Get Phones",
        "operationId": "get-phones",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Phone",
        "description": "Add Phone",
        "operationId": "add-phone",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/phones/:phone_id": {
      "get": {
        "summary": "Get Phone",
        "description": "get Phone",
        "operationId": "get-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Phone",
        "description": "Update Phone",
        "operationId": "update-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Phone",
        "description": "Delete Phone",
        "operationId": "delete-phone",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/regular_schedule": {
      "get": {
        "summary": "Get Regular Schedule",
        "description": "Get Regular Schedule",
        "operationId": "get-regular-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Regular Schedule",
        "description": "Add Regular Schedule",
        "operationId": "add-regular-schedule",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/regular_schedule/:required_document_id/": {
      "get": {
        "summary": "Get Regular Schedule",
        "description": "Get Regular Schedule",
        "operationId": "get-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Regular Schedule",
        "description": "Update Regular Schedule",
        "operationId": "update-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Regular Schedule",
        "description": "Delete Regular Schedule",
        "operationId": "delete-regular-schedule",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/required_document/": {
      "get": {
        "summary": "Get Required Document",
        "description": "Get Required Document",
        "operationId": "get-required-document",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Required Document",
        "description": "Add Required Document",
        "operationId": "add-required-document",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/required_document/:required_document_id/": {
      "get": {
        "summary": "Get Required Document",
        "description": "Get Required Document",
        "operationId": "get-required-document",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Required Document",
        "description": "Update Required Document",
        "operationId": "update-required-document",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Required Document",
        "description": "Delete Required Document",
        "operationId": "delete-required-document",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/service_area/": {
      "get": {
        "summary": "Get Service Area",
        "description": "Get Service Area",
        "operationId": "get-service-area",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "post": {
        "summary": "Add Service Area",
        "description": "Add Service Area",
        "operationId": "add-service-area",
        "parameters": [
          {
            "in": "query",
            "name": "country_prefix",
            "description": "The country prefix code, such as +1 for the USA."
          },
          {
            "in": "query",
            "name": "department",
            "description": "The department this phone number reaches."
          },
          {
            "in": "query",
            "name": "extension",
            "description": "The phone number extension. Must only contain numbers. For example: “1234”"
          },
          {
            "in": "query",
            "name": "number",
            "description": "The 10-digit US phone number."
          },
          {
            "in": "query",
            "name": "number_type",
            "description": "Can be one of these four values: fax, voice, hotline, tty."
          },
          {
            "in": "query",
            "name": "vanity_number",
            "description": "The 10-digit US phone number with vanity letters. For example: 703-555-HELP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    },
    "/services/:service_id/service_area/:service_area_id/": {
      "get": {
        "summary": "Get Service Area",
        "description": "Get Service Area",
        "operationId": "get-service-area",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "put": {
        "summary": "Update Service Area",
        "description": "Update Service Area",
        "operationId": "update-service-area",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      },
      "delete": {
        "summary": "Delete Service Area",
        "description": "Delete Service Area",
        "operationId": "delete-service-area",
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "description": "The location id.",
            "type": "string",
            "format": "string"
          },
          {
            "in": "query",
            "name": "phone_id",
            "description": "The phone id.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          ""
        ]
      }
    }
  },
  "definitions": {
    "accessibility_for_disabilities": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "accessibility": {
          "description": "",
          "type": "string"
        }
      }
    },
    "contact": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "department": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        }
      }
    },
    "eligibility": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "eligibility": {
          "description": "",
          "type": "string"
        }
      }
    },
    "fee": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "fee": {
          "description": "",
          "type": "string"
        }
      }
    },
    "funding": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "source": {
          "description": "",
          "type": "string"
        }
      }
    },
    "holiday_schedule": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "closed": {
          "description": "",
          "type": "boolean"
        },
        "opens_at": {
          "description": "",
          "type": "time"
        },
        "closes_at": {
          "description": "",
          "type": "time"
        },
        "start_date": {
          "description": "",
          "type": "date"
        },
        "end_date": {
          "description": "",
          "type": "date"
        }
      }
    },
    "intepretation_services": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "language": {
          "description": "",
          "type": "string"
        }
      }
    },
    "language": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "language": {
          "description": "",
          "type": "string"
        }
      }
    },
    "location": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "alternate_name": {
          "description": "",
          "type": "string"
        },
        "transportation": {
          "description": "",
          "type": "string"
        },
        "latitude": {
          "description": "",
          "type": "float"
        },
        "longitude": {
          "description": "",
          "type": "float"
        }
      }
    },
    "metadata": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "resource_id": {
          "description": "",
          "type": "string"
        },
        "last_action_date": {
          "description": "",
          "type": "string"
        },
        "last_action_type": {
          "description": "",
          "type": "string"
        },
        "field_name": {
          "description": "",
          "type": "string"
        },
        "previous_value": {
          "description": "",
          "type": "string"
        },
        "replacement_value": {
          "description": "",
          "type": "string"
        },
        "updated_by": {
          "description": "",
          "type": "string"
        }
      }
    },
    "meta_table_description": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "language": {
          "description": "",
          "type": "string"
        },
        "character_set": {
          "description": "",
          "type": "string"
        }
      }
    },
    "organization": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "alternate_name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "tax_status": {
          "description": "",
          "type": "string"
        },
        "tax_id": {
          "description": "",
          "type": "string"
        },
        "year_incorporated": {
          "description": "",
          "type": "date"
        },
        "legal_status": {
          "description": "",
          "type": "string"
        }
      }
    },
    "payment_accepted": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "payment": {
          "description": "",
          "type": "string"
        }
      }
    },
    "phone": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "contact_id": {
          "description": "",
          "type": "string"
        },
        "number": {
          "description": "",
          "type": "string"
        },
        "extension": {
          "description": "",
          "type": "number"
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "department": {
          "description": "",
          "type": "string"
        }
      }
    },
    "physical_address": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "attention": {
          "description": "",
          "type": "string"
        },
        "address_1": {
          "description": "",
          "type": "string"
        },
        "address_2": {
          "description": "",
          "type": "string"
        },
        "address_3": {
          "description": "",
          "type": "string"
        },
        "address_4": {
          "description": "",
          "type": "string"
        },
        "city": {
          "description": "",
          "type": "string"
        },
        "state_province": {
          "description": "",
          "type": "string"
        },
        "postal_code": {
          "description": "",
          "type": "string"
        },
        "country": {
          "description": "",
          "type": "string"
        }
      }
    },
    "postal_address": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "attention": {
          "description": "",
          "type": "string"
        },
        "address_1": {
          "description": "",
          "type": "string"
        },
        "address_2": {
          "description": "",
          "type": "string"
        },
        "address_3": {
          "description": "",
          "type": "string"
        },
        "address_4": {
          "description": "",
          "type": "string"
        },
        "city": {
          "description": "",
          "type": "string"
        },
        "state_province": {
          "description": "",
          "type": "string"
        },
        "postal_code": {
          "description": "",
          "type": "string"
        },
        "country": {
          "description": "",
          "type": "string"
        }
      }
    },
    "program": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "alternate_name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "regular_schedule": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "weekday": {
          "description": "",
          "type": "integer"
        },
        "opens_at": {
          "description": "",
          "type": "time"
        },
        "closes_at": {
          "description": "",
          "type": "time"
        }
      }
    },
    "required_document": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "document": {
          "description": "",
          "type": "string"
        }
      }
    },
    "service": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "organization_id": {
          "description": "",
          "type": "string"
        },
        "program_id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "alternate_name": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "application_process": {
          "description": "",
          "type": "string"
        },
        "wait_time": {
          "description": "",
          "type": "string"
        }
      }
    },
    "service_at_location": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "location_id": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        }
      }
    },
    "service_area": {
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "service_id": {
          "description": "",
          "type": "string"
        },
        "service_area": {
          "description": "",
          "type": "string"
        }
      }
    }
  }
}
